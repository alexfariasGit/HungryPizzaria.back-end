// <auto-generated />
using System;
using HungryPizzaria.Data.Operation.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HungryPizzaria.Data.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20200730124401_InitialCreated")]
    partial class InitialCreated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HungryPizzaria.Domain.Operation.Entities.Projeto.Cliente", b =>
                {
                    b.Property<int>("IDCLIENTE")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDCLIENTE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BAIRRO")
                        .IsRequired()
                        .HasColumnName("BAIRRO")
                        .HasMaxLength(50);

                    b.Property<string>("CIDADE")
                        .IsRequired()
                        .HasColumnName("CIDADE")
                        .HasMaxLength(50);

                    b.Property<string>("COMPLEMENTO")
                        .HasColumnName("COMPLEMENTO")
                        .HasMaxLength(50);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasMaxLength(15);

                    b.Property<DateTime>("DTALTERACAO")
                        .HasColumnName("DTALTERACAO");

                    b.Property<DateTime>("DTINCLUSAO")
                        .HasColumnName("DTINCLUSAO");

                    b.Property<DateTime>("DTNASCIMENTO")
                        .HasColumnName("DTNASCIMENTO");

                    b.Property<string>("LOGRADOURO")
                        .IsRequired()
                        .HasColumnName("LOGRADOURO")
                        .HasMaxLength(250);

                    b.Property<string>("NOME")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasMaxLength(150);

                    b.Property<int>("NUMERO")
                        .HasColumnName("NUMERO");

                    b.Property<string>("TELEFONE")
                        .IsRequired()
                        .HasColumnName("TELEFONE")
                        .HasMaxLength(15);

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnName("UF")
                        .HasMaxLength(2);

                    b.HasKey("IDCLIENTE")
                        .HasName("IDCLIENTE");

                    b.ToTable("Cliente","Projeto");
                });

            modelBuilder.Entity("HungryPizzaria.Domain.Operation.Entities.Projeto.ItensPedido", b =>
                {
                    b.Property<int>("IDITENSPEDIDOS")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDITENSPEDIDOS")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DTINCLUSAO")
                        .HasColumnName("DTINCLUSAO");

                    b.Property<int>("IDPEDIDOS")
                        .HasColumnName("IDPEDIDOS");

                    b.Property<int>("IDPIZZA")
                        .HasColumnName("IDPIZZA");

                    b.Property<bool>("INTEIRA")
                        .HasColumnName("INTEIRA");

                    b.Property<double>("TOTAL")
                        .HasColumnName("TOTAL");

                    b.HasKey("IDITENSPEDIDOS")
                        .HasName("IDITENSPEDIDOS");

                    b.HasIndex("IDPEDIDOS");

                    b.HasIndex("IDPIZZA");

                    b.ToTable("ITENS_PEDIDOS","Projeto");
                });

            modelBuilder.Entity("HungryPizzaria.Domain.Operation.Entities.Projeto.Pedidos", b =>
                {
                    b.Property<int>("IDPEDIDOS")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDPEDIDOS")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DTINCLUSAO")
                        .HasColumnName("DTINCLUSAO");

                    b.Property<int>("IDCLIENTE")
                        .HasColumnName("IDCLIENTE");

                    b.Property<double>("TOTAL")
                        .HasColumnName("TOTAL");

                    b.HasKey("IDPEDIDOS")
                        .HasName("IDPEDIDOS");

                    b.HasIndex("IDCLIENTE");

                    b.ToTable("Pedidos","Projeto");
                });

            modelBuilder.Entity("HungryPizzaria.Domain.Operation.Entities.Projeto.PizzaSabores", b =>
                {
                    b.Property<int>("IDPIZZA")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDPIZZA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DESCRICAO")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DTALTERACAO")
                        .HasColumnName("DTALTERACAO");

                    b.Property<DateTime>("DTINCLUSAO")
                        .HasColumnName("DTINCLUSAO");

                    b.Property<bool>("STATUS")
                        .HasColumnName("STATUS");

                    b.Property<double>("VALORES")
                        .HasColumnName("VALORES");

                    b.HasKey("IDPIZZA")
                        .HasName("IDPIZZA");

                    b.ToTable("PIZZA_SABORES","Projeto");
                });

            modelBuilder.Entity("HungryPizzaria.Domain.Operation.Entities.Projeto.ItensPedido", b =>
                {
                    b.HasOne("HungryPizzaria.Domain.Operation.Entities.Projeto.Pedidos", "Pedidos")
                        .WithMany("ItensPedidos")
                        .HasForeignKey("IDPEDIDOS")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HungryPizzaria.Domain.Operation.Entities.Projeto.PizzaSabores", "PizzaSabores")
                        .WithMany("ItensPedido")
                        .HasForeignKey("IDPIZZA")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HungryPizzaria.Domain.Operation.Entities.Projeto.Pedidos", b =>
                {
                    b.HasOne("HungryPizzaria.Domain.Operation.Entities.Projeto.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("IDCLIENTE")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
